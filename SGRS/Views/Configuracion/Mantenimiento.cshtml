


@using SGRS.Helper.Constantes

@model SGRS.Models.ParametroViewModel

@Html.AntiForgeryToken()
@Html.HiddenFor(model => model.ePar.CODIGO_PARAMETRO, new { id = "txtCodigoParametro" })
@Html.HiddenFor(model => model.ePar.CODIGO_PADRE, new { id = "txtCodigoPadre" })

@Html.HiddenFor(model => model.CODIGO_PARAMETRO_PADRE, new { id = "txtCodigoParametroPadre" })
@Html.HiddenFor(model => model.BESTADO_REGISTRO, new { id = "txtEstadoRegistro" })

<!-- pagina Mantenimiento controller :configuracion -->
<div class="row">
    <div class="col-md-12">
        <div class="form-group col-md-12 pad-pan-ef-2">
            <div class="panel panel-default mar-bot-0px">
                <div class="panel-heading pad-pan-ef-4">
                    <h5>
                        <span id="titulo-opcion" class="titulo-opcion">@Model.NOMBRE_PANTALLA<span id="spnNroFilas"></span></span>
                    </h5>
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6 pad-pan-ef-2">
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <label for="txtNombre" class="lbl-fe-1">Nombre <span class="text-danger">*</span></label>

                                    <div class="input-group">
                                        <div class="input-group-append">
                                            <span class="input-group-text">
                                                <i class="mdi mdi-lead-pencil"></i>
                                            </span>
                                        </div>
                                        @Html.TextBoxFor(model => model.ePar.NOMBRE, new { id = "txtNombre", placeholder = "Nombre", @class = "form-control txt-fe-1 inicioSinEspacios", @maxlength = "200" })
                                    </div>

                                </div>



                                <div class="Separador10px"></div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <label for="txtNombreCorto" class="lbl-fe-1">Nombre Corto <span class="text-danger">*</span></label>
                                    <div class="input-group">
                                        <div class="input-group-append">
                                            <span class="input-group-text">
                                                <i class="mdi mdi-lead-pencil"></i>
                                            </span>
                                        </div>
                                        @Html.TextBoxFor(model => model.ePar.NOMBRE_CORTO, new { id = "txtNombreCorto", placeholder = "Nombre Corto", @class = "form-control txt-fe-1 inicioSinEspacios", @maxlength = "150" })

                                    </div>

                                </div>
                                <div class="Separador10px"></div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <label for="txtDescripcion" class="lbl-fe-1">Descripción <span class="text-danger">*</span></label>
                                    <div class="input-group">
                                        <div class="input-group-append">
                                            <span class="input-group-text">
                                                <i class="mdi mdi-lead-pencil"></i>
                                            </span>
                                        </div>
                                        @Html.TextAreaFor(model => model.ePar.DESCRIPCION, new { id = "txtDescripcion", placeholder = "Descripción", @class = "form-control txt-are-fe-1 inicioSinEspacios", rows = "5", @maxlength = "4000" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12" id="dvEstadoRegistro">
                                    <div class="Separador10px"></div>
                                    <div class="lbl-fe-1">

                                        <label for="chkEstado" class="lbl-fe-1">Estado</label>
                                        <div class="input-group">
                                            @Html.CheckBoxFor(model => model.CO_ESTADO_REGISTRO, new { id = "chkEstado", @class = "check-fe-2" })
                                        </div>
                                        <label for="chkActivo" id="chkActivo"> Activo</label>
                                        <label for="chkInactivo" id="chkInactivo"> Inactivo</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6 pad-pan-ef-2">
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">

                                    <label for="txtValor" class="lbl-fe-1">VALOR <span class="text-danger">*</span></label>
                                    <div class="input-group">
                                        <div class="input-group-append">
                                            <span class="input-group-text">
                                                <i class="mdi mdi-lead-pencil"></i>
                                            </span>
                                        </div>
                                        @Html.TextBoxFor(model => model.ePar.VALOR, new { id = "txtValor", placeholder = "Ingrese el valor", @class = "form-control txt-fe-1 inicioSinEspacios", @maxlength = "4000" })
                                    </div>
                                </div>
                                <div class="Separador10px"></div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <label for="ePar_ValorFecha" class="lbl-fe-1">Valor Fecha <span class="text-danger">*</span></label>
                                    <div class="input-group">
                                        <div class="input-group-append">
                                            <span class="input-group-text">
                                                <i class="mdi mdi-calendar"></i>
                                            </span>
                                        </div>
                                        @Html.TextBoxFor(model => model.ePar.VALOR_FECHA, "{0:dd/MM/yyyy}", new { placeholder = "Ingrese la fecha", @id = "txtFecha", @class = " form-control txt-fe-1 inicioSinEspacios cldValorFecha fechaddMMyyyy" })
                                    </div>
                                </div>


                                <div class="Separador10px"></div>
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <label for="txtDescripcionNotificacion" class="lbl-fe-1">Valor 2</label>
                                    <div class="input-group">
                                        <div class="input-group-append">
                                            <span class="input-group-text">
                                                <i class="mdi mdi-lead-pencil"></i>
                                            </span>
                                        </div>
                                        @Html.TextAreaFor(model => model.ePar.DESCRIPCION_NOTIFICACION, new { id = "txtDescripcionNotificacion", placeholder = "Ingrese el valor 2", @class = "form-control txt-are-fe-1 inicioSinEspacios", rows = "5" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 pad-pan-ef-2 dv-Leyend text-left">
                           
                             <span class="text-danger"> <span class="fa fa-asterisk badged-Leyend"></span> Campos obligatorios.</span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 text-right">
                            <button type="button" class="btn btn-default tm14px" id="btnCancelar"><span class="glyphicon glyphicon-remove"></span> Cancelar</button>
                            <button type="button" class="btn btn-danger tm14px" id="btnGrabar"><span class="glyphicon glyphicon-floppy-disk"></span> Grabar</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">


    $(document).ready(function () {


        $("#txtFecha").datepicker({
            format: "dd/mm/yyyy",
            autoclose: !0,
            todayHighlight: !0
        });


        $('#txtNombrePantalla').css('border-style', 'hidden');


        $("#ePar_ValorFecha").datepicker();

        $('#ePar_ValorFecha').mask('00/00/0000');

        if ($('#txtCodigoParametro').val() == 0) {
            $('#chkEstado')[0].checked = true
            $("#dvEstadoRegistro").css("display", "none");
        }

        $('#btnGrabar').click(function () {
            GrabarParametro();
        })

        $('#btnCancelar').click(function () {

            volverParametro();
        });



        if (!$('#chkEstado')[0].checked) {
            $('#chkActivo').hide()
            $('#chkInactivo').show()
        }
        else {
            $('#chkInactivo').hide()
            $('#chkActivo').show()
        }

        $('#chkEstado').change(function () {
            if (!$('#chkEstado')[0].checked) {
                $('#chkActivo').hide()
                $('#chkInactivo').show()
            }
            else {
                $('#chkInactivo').hide()
                $('#chkActivo').show()
            }

        });
        function validarFechaddMMyyyy(tempValue) {
            debugger;
            var preg = /^(?:(?:31(\/|-|\.)(?:0?[13578]|1[02]))\1|(?:(?:29|30)(\/|-|\.)(?:0?[1,3-9]|1[0-2])\2))(?:(?:1[6-9]|[2-9]\d)?\d{2})$|^(?:29(\/|-|\.)0?2\3(?:(?:(?:1[6-9]|[2-9]\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\d|2[0-8])(\/|-|\.)(?:(?:0?[1-9])|(?:1[0-2]))\4(?:(?:1[6-9]|[2-9]\d)?\d{2})$/;
            if (preg.test(tempValue) === true) {
                return true;
            } else {
                return false;
            }
        }

        function validarData(data) {

            var resultadoText = "";
            var resultado = true;

            if (data.NOMBRE == "") {
                resultadoText += "-Ingrese nombre Válido.</br>";
                resultado = false;
            }
            if (data.NOMBRE_CORTO == "") {
                resultadoText += "-Ingrese nombre corto Válido.</br>";
                resultado = false;
            }
            if (data.VALOR_FECHA != "") {
                if (!validarFechaddMMyyyy(data.VALOR_FECHA)) {
                    resultadoText += "-Ingrese una fecha Válida.</br>";
                    resultado = false;
                }
            }

            if (!resultado) {
                MostrarMensaje("E", resultadoText);
            }
            return resultado;
        }

        function GrabarParametro() {
 
            var bEstado = $('#chkEstado')[0].checked;

            var eParametro = new FormData();

            var eParametro = new Object();
            var _ePar = new Object();

            eParametro.BESTADO_REGISTRO = $('#txtEstadoRegistro').val();
            eParametro.CO_ESTADO_REGISTRO = $('#chkEstado').val();

            if (bEstado) {
                _ePar.ESTADO_REGISTRO = "@DatosConstantes.EstadoRegistro.Activo";
            }
            else {
                _ePar.ESTADO_REGISTRO = "@DatosConstantes.EstadoRegistro.Inactivo";
            }


            _ePar.CODIGO_PARAMETRO = $('#txtCodigoParametro').val();
            _ePar.CODIGO_PADRE = $('#txtCodigoParametroPadre').val();
            _ePar.NOMBRE = $('#txtNombre').val().trim();
            _ePar.NOMBRE_CORTO = $('#txtNombreCorto').val().trim();
            _ePar.DESCRIPCION = $('#txtDescripcion').val().trim();
            _ePar.VALOR = $('#txtValor').val().trim();
            _ePar.VALOR_FECHA = $('#txtFecha').val();

            _ePar.DESCRIPCION_NOTIFICACION = encodeURI($('#txtDescripcionNotificacion').val()).trim();

            if (!validarData(_ePar)) {
                return;
            }

            eParametro.ePar = _ePar;

            $.ajax({
                type: "POST",
                url: '@Url.Action("Guardar", "Configuracion")',
                data: { parametroViewModel: eParametro },
                dataType: 'json',
                beforeSend: function () {
                    $("body").addClass("loading")
                },
                success: function (data) {
                    console.log(data);
                    if (data.Code == "@DatosConstantes.Response.Success") {
                       
                        swal({
                            title: 'Exito',
                            text: "Se registro correctamente ",
                            type: 'success',
                            showCancelButton: false,
                            confirmButtonClass: 'btn btn-success',
           
                            confirmButtonText: 'OK'
                        }).then(function () {
                            volverParametro();
                        })
                        
                    }
                    else {
                        @*MostrarMensaje("@DatosConstantes.Response.Exception", data.Description);*@
                    }

                },
                error: function (xhr, status, error) {
                    @*MostrarMensaje("@DatosConstantes.Response.Exception", error);*@
                },
                complete: function (jqXHR, textStatus) {
                    $("body").removeClass("loading");
                },
            });
        }
    });

    function ValidarRegistro() {
        var result = "";
        if ($('#txtnombre').val() == "")
            result = "Ingrese un nombre por favor.";

        return result;
    }

    function volverParametro() {
        debugger;
        $("#divLayoutBody").load(
            "/Configuracion/Index/",
            {
                controlador: "Parametro",
                accion: "Index",
                codigoParametro: $('#txtCodigoParametroPadre').val(),
                callBackMethod: "refrescarggmParametro"
            }
        );
    };


    function AdaptaHtmlEditor(data) {
        'use strict'

        var regularExpresion = new RegExp("<p>&nbsp;\n</p>", "g");
        data = data.replace(regularExpresion, '');

        regularExpresion = new RegExp("<p>&nbsp;\n\n</p>", "g");
        data = data.replace(regularExpresion, '');

        regularExpresion = new RegExp("<p>&nbsp;\n<p>&nbsp;</p>\n</p>", "g");
        data = data.replace(regularExpresion, '');

        regularExpresion = new RegExp("<p>&nbsp;</p>\n\n<p>&nbsp;</p>", "g");
        data = data.replace(regularExpresion, '');

        regularExpresion = new RegExp('"', "g");
        data = data.replace(regularExpresion, "'");

        return data;
    };


</script>


